{"version":3,"sources":["components/FormPage/Form.js","store/items/actions.js","components/FormPage/List.js","components/FormPage/FormPage.js","components/ChartPage/Chart.js","components/ChartPage/ChartPage.js","components/Header/Header.js","components/App.js","store/items/reducer.js","store/store.js","serviceWorker.js","index.js"],"names":["FormWrapper","styled","form","Input","input","AddBtn","button","Form","useState","name","setName","value","setValue","dispatch","useDispatch","onSubmit","e","preventDefault","trim","length","newItem","id","Date","now","type","payload","onChange","target","ListWrapper","div","List","items","useSelector","state","useEffect","localStorage","setItem","JSON","stringify","map","item","key","onClick","FormPageWrapper","FormPage","Pie","svg","strokeWidth","Legend","ul","Chart","tipElement","colors","percents","offsets","strokeDashoffset","totalValue","forEach","push","Math","random","toString","substring","i","pop","prepareData","style","color","viewBox","className","data-tip","toFixed","r","cx","cy","strokeDasharray","stroke","onMouseEnter","document","createElement","innerHTML","dataset","tip","body","append","left","clientX","top","clientY","showTip","onMouseLeave","remove","background","ChartPageWrapper","ChartPage","Header","to","activeClassName","App","basename","exact","path","render","initialState","parse","getItem","rootReducer","combineReducers","action","filter","store","createStore","composeWithDevTools","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cbd349be.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { addItemAction } from '../../store/items/actions'\r\n\r\n\r\nconst FormWrapper = styled.form`\r\n    width: 50%;\r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items:center;\r\n    color: #fff;\r\n    position: relative;\r\n    & label {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 50%;\r\n        text-transform: uppercase;\r\n        letter-spacing: 2px;\r\n        font-size: 13px;\r\n    }\r\n    @media (max-width: 1024px) {\r\n        width: 100%;\r\n        label {\r\n            width: 70%;\r\n        }\r\n    }\r\n    @media (max-width: 475px) {\r\n        label {\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    margin: 3px 0 10px;\r\n    height: 35px;\r\n    border: 1px solid #ffffff40;\r\n    color: #fff;\r\n    background: none;\r\n    outline: none;\r\n    font-size: 20px;\r\n    border-radius: 5px;\r\n    padding: 0 20px;\r\n    &::-webkit-outer-spin-button, ::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n    }\r\n    -moz-appearance: textfield;\r\n`\r\nconst AddBtn = styled.button`\r\n    width: 100px;\r\n    height: 40px;\r\n    color: #fff;\r\n    background: none;\r\n    border: 2px solid #ffffff40;\r\n    transition: .3s;\r\n    letter-spacing: 2px;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    outline: none;\r\n    &:hover {\r\n        color: #000;\r\n        background: #fff;\r\n    }\r\n    position: absolute;\r\n    right: 0;\r\n    &::after {\r\n        position: absolute;\r\n        content: '';\r\n        width: 8px;\r\n        height: 8px;\r\n        right: -10px;\r\n        top: 50%;\r\n        transform: translateY(-50%) rotate(45deg);\r\n        border-top: 1px solid #ffffff;\r\n        border-right: 1px solid #ffffff;\r\n    }\r\n    @media (max-width: 1024px) {\r\n        position: relative;\r\n        &::after {\r\n            right: 50%;\r\n            top: 100%;\r\n            transform: translateX(50%) rotate(135deg);\r\n        }\r\n    }\r\n`\r\n\r\nconst Form = () => {\r\n    const [name, setName] = useState('')\r\n    const [value, setValue] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const addItem = (e) => {\r\n        e.preventDefault()\r\n        if (name.trim().length === 0) return\r\n\r\n        const newItem = {\r\n            name,\r\n            value,\r\n            id: Date.now()\r\n        }\r\n\r\n        if (name.length && value > 0) dispatch(addItemAction(newItem))\r\n        \r\n        setName('')\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormWrapper onSubmit={addItem}>\r\n                <label>\r\n                    Item\r\n                    <Input type=\"text\" value={name} onChange={e => setName(e.target.value)} />\r\n                </label>\r\n                <label>\r\n                    Value\r\n                    <Input type=\"number\" value={value} onChange={e => setValue(+e.target.value)} />\r\n                </label>\r\n                <AddBtn type='submit'>ADD</AddBtn>\r\n            </FormWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;","export const addItemAction = (item) => ({\r\n    type: 'ADD_ITEM',\r\n    payload: item\r\n})\r\n\r\nexport const deleteItemAction = (itemId) => ({\r\n    type: 'DELETE_ITEM',\r\n    payload: itemId\r\n})","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteItemAction } from '../../store/items/actions';\r\n\r\n\r\n\r\nconst ListWrapper = styled.div`\r\n    width: 50%;\r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items:center;\r\n    color: #fff;\r\n    & ul {\r\n        list-style: none;\r\n        padding: 0;\r\n        width: 70%;\r\n        & li {\r\n            display: grid;\r\n            grid-template-columns: 1fr 100px 10px;\r\n            padding: 3px 15px;\r\n            margin: 3px;\r\n            border-bottom: 1px solid #ffffff40;\r\n            & span:first-child {\r\n                text-transform: capitalize;\r\n                letter-spacing: 1px;\r\n            }\r\n            & span:last-child {\r\n                color: #ff000091;\r\n                cursor: pointer;\r\n                transition: .3s;\r\n                &:hover {\r\n                    color:#ff0000;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @media (max-width: 1024px) {\r\n        width: 100%;\r\n    }\r\n    @media (max-width: 475px) {\r\n        font-size: 12px;\r\n        ul {\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nconst List = () => {\r\n    const items = useSelector(state => state.items)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('items', JSON.stringify(items))\r\n    }, [items])\r\n\r\n    \r\n    if (!items.length) return <ListWrapper>No items</ListWrapper>\r\n    return (\r\n        <ListWrapper>\r\n            <ul>\r\n                {items.map(item => (\r\n                    <li key={item.id}>\r\n                        <span>{item.name}</span>\r\n                        <span>{item.value}</span>\r\n                        <span onClick={() => dispatch(deleteItemAction(item.id))}>x</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </ListWrapper>\r\n    )\r\n}\r\n\r\nexport default List;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Form from './Form'\r\nimport List from './List'\r\n\r\nconst FormPageWrapper = styled.div`\r\n    background: #182246;\r\n    height: 80vh;\r\n    min-height: 600px;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    transition: .3s;\r\n    display: flex;\r\n    @media (max-width: 1024px) {\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nconst FormPage = () => (\r\n        <FormPageWrapper>\r\n            <Form />\r\n            <List />\r\n        </FormPageWrapper>\r\n)\r\n\r\n\r\nexport default FormPage;","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport './tip.scss'\r\n\r\nconst strokeWidth = 17; // change in order to fit a Pie width (max 30)\r\nconst Pie = styled.svg`\r\n    cursor: pointer;\r\n    width: 60vh;\r\n    background: #ffffff00;\r\n    border-radius: 50%;\r\n    transform: rotate(-90deg);\r\n    filter: drop-shadow(0 0 0.5rem rgba(0, 0, 0, 0.5));\r\n    & circle {\r\n        fill: none;\r\n        stroke-width: ${strokeWidth}; \r\n        cursor: pointer;\r\n        transition: .2s;\r\n        &:hover {\r\n            stroke-width: ${strokeWidth === 30 ? 30 : strokeWidth + 2};\r\n        }\r\n    }\r\n    @media (max-width: 475px) {\r\n        width: 44vh;\r\n    }\r\n`\r\nconst Legend = styled.ul`\r\n    display: flex;\r\n    list-style: none;\r\n    padding: 0;\r\n    max-width: 70%;\r\n    flex-wrap: wrap;\r\n    & li {\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 3px 10px;\r\n        font-size: 16px;\r\n        letter-spacing:1px;\r\n        color: #fff;\r\n        text-transform: capitalize;\r\n    }\r\n    & span {\r\n        width: 20px;\r\n        height: 20px;\r\n        margin-right: 20px;\r\n        border: 1px solid #fff;\r\n        border-radius: 50%;\r\n    }\r\n`\r\n\r\nconst Chart = () => {\r\n    const items = useSelector(state => state.items)\r\n    \r\n    const colors = [];\r\n    const percents = [];\r\n    const offsets = [0];\r\n    let strokeDashoffset = 0;\r\n    let totalValue = 0;\r\n    let tipElement;\r\n\r\n    const prepareData = () => {\r\n        for (let key in items) totalValue += items[key].value\r\n        items.forEach(item => colors.push('#' + (Math.random().toString(16) + '000000').substring(2,8)))\r\n        items.forEach(item => percents.push(item.value * 100 / totalValue))\r\n        items.forEach((item, i) => offsets.push(strokeDashoffset -= percents[i]))\r\n        offsets.pop()\r\n    }\r\n    prepareData()\r\n\r\n\r\n    const showTip = (e) => {\r\n        tipElement = document.createElement('div');\r\n        tipElement.className = 'tip';\r\n        tipElement.innerHTML = e.target.dataset.tip;\r\n        document.body.append(tipElement);\r\n        tipElement.style.left = e.clientX + 10 + 'px';\r\n        tipElement.style.top = e.clientY + 10 + 'px';\r\n    }\r\n\r\n    const hideTip = () => tipElement.remove();\r\n\r\n    if (items.length === 0) return <p style={{color: 'white'}}>No items</p>;\r\n    return (\r\n        <>\r\n            <Pie viewBox='0 0 60 60' className='pie'>\r\n                {items.map((item, i) => (\r\n                    <circle \r\n                        key={item.id}\r\n                        data-tip={`${item.name}<br/>${item.value}: ${percents[i].toFixed(2)}%`}\r\n                        r=\"25%\" cx=\"50%\" cy=\"50%\" \r\n                        style={\r\n                            {\r\n                                strokeDasharray: `${percents[i]} 100`,\r\n                                strokeDashoffset: `${offsets[i]}`,\r\n                                stroke: `${colors[i]}`\r\n                            }\r\n                        }\r\n                        onMouseEnter={(e) => showTip(e)}\r\n                        onMouseLeave={() => hideTip()}\r\n                    />\r\n                ))}\r\n            </Pie>\r\n\r\n            <Legend>\r\n                {items.map((item, i) => (\r\n                    <li key={item.id}>\r\n                        <span style={{background: `${colors[i]}`}}></span>\r\n                        {item.name}\r\n                    </li>\r\n                ))}\r\n            </Legend>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Chart from './Chart'\r\n\r\nconst ChartPageWrapper = styled.div`\r\n    background: #182246;\r\n    height: 80vh;\r\n    min-height: 600px;\r\n    border-bottom-left-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    transition: .3s;\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n`\r\n\r\nconst ChartPage = () => (\r\n    <ChartPageWrapper>\r\n        <Chart />\r\n    </ChartPageWrapper>\r\n)\r\n\r\nexport default ChartPage;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Header.scss'\r\n\r\nconst Header = () => (\r\n    <div className='header'>\r\n        <NavLink to=\"/home\" activeClassName=\"header-link_active\" className=\"header-link\">Form</NavLink>\r\n        <NavLink to=\"/chart\" activeClassName=\"header-link_active\" className=\"header-link\">Chart</NavLink>\r\n    </div>\r\n)\r\n\r\nexport default Header;","import React from 'react';\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport FormPage from './FormPage/FormPage'\nimport ChartPage from './ChartPage/ChartPage'\nimport Header from './Header/Header';\n\nfunction App() {\n  return (\n      <div className=\"container\">\n        <Router basename={'/pie-chart'}>\n        <Header/>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/home\"/>}/>\n          <Route path={'/home'} render={() => <FormPage />} />\n          <Route path={'/chart'} render={() => <ChartPage />} />\n        </Router>\n      </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    items: JSON.parse(localStorage.getItem('items')) || [],\r\n}\r\n\r\nexport const itemsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_ITEM':\r\n            return [...state, action.payload]\r\n        case 'DELETE_ITEM':\r\n            return state.filter(item => item.id !== +action.payload)\r\n        default: return state.items\r\n    }\r\n}\r\n","import { createStore } from 'redux';\r\nimport { combineReducers } from \"redux\";\r\nimport { itemsReducer } from './items/reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst rootReducer = combineReducers({\r\n    items: itemsReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools()\r\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {Provider} from 'react-redux'\nimport { store } from './store/store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}